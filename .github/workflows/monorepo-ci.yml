name: Monorepo CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  detect-changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      api: ${{ steps.changes.outputs.api }}
      mobile: ${{ steps.changes.outputs.mobile }}
      docs: ${{ steps.changes.outputs.docs }}
      workflows: ${{ steps.changes.outputs.workflows }}
    steps:
      - name: 📦 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔍 Detect changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            api:
              - 'apps/api/**'
            mobile:
              - 'apps/mobile-app/**'
            docs:
              - 'docs/**'
              - '*.md'
            workflows:
              - '.github/**'

  validate-structure:
    name: Validate Monorepo Structure
    runs-on: ubuntu-latest
    steps:
      - name: 📦 Checkout
        uses: actions/checkout@v4

      - name: 🔍 Validate directory structure
        run: |
          echo "🏗️ Validating monorepo structure..."
          
          # Check required directories exist
          for dir in "apps/api" "apps/mobile-app" "docs"; do
            if [ ! -d "$dir" ]; then
              echo "❌ Missing required directory: $dir"
              exit 1
            fi
          done
          
          # Check for package.json files
          if [ ! -f "apps/api/composer.json" ]; then
            echo "❌ Missing apps/api/composer.json"
            exit 1
          fi
          
          if [ ! -f "apps/mobile-app/package.json" ]; then
            echo "❌ Missing apps/mobile-app/package.json"
            exit 1
          fi
          
          echo "✅ Monorepo structure is valid"

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [detect-changes, validate-structure]
    if: needs.detect-changes.outputs.api == 'true' || needs.detect-changes.outputs.mobile == 'true'

    steps:
      - name: 📦 Checkout
        uses: actions/checkout@v4

      - name: 🧪 Run Integration Tests
        run: |
          echo "🔗 Running cross-app integration validation..."
          
          # Check API endpoints documented in mobile app
          if [ -f "apps/mobile-app/src/api/types.ts" ]; then
            echo "✅ Mobile app API types found"
          fi
          
          # Check mobile security configuration
          if [ -f "apps/api/config/sanctum-mobile.php" ]; then
            echo "✅ Mobile security configuration found"
          fi
          
          echo "✅ Integration structure validated"

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: 📦 Checkout
        uses: actions/checkout@v4

      - name: 🔒 Check for secrets in code
        run: |
          echo "🔍 Scanning for exposed secrets..."
          
          # Check for common secret patterns
          if grep -r -E "(password|secret|key|token).*[=:]\s*['\"][^'\"]*['\"]" apps/ --exclude-dir=node_modules --exclude-dir=vendor --exclude="*.lock" | grep -v ".example" | grep -v "test" | head -5; then
            echo "⚠️ Potential secrets detected. Please review."
          else
            echo "✅ No obvious secrets detected"
          fi